[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "EPL-Predictions"
version = "0.1.0"
description = "A production-grade MLOps project for predicting English Premier League (EPL) match outcomes using match statistics and xG data, featuring automated data ingestion, model training, continuous evaluation, and monitoring via the LGTM stack."
keywords = ["EPL", "football", "soccer", "machine learning", "MLOps", "xG", "match predictions"]
classifiers = [
    "Programming Language :: Python :: 311",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Sports",
    "Topic :: Software Development :: Version Control",
    "Topic :: System :: Monitoring",
    "Topic :: Software Development :: Build Tools"
]
authors = [
    { name = "Mahmoud Kamal", email = "mk.bayumi@gmail.com" }
]

readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"

# add configuration for pylint
[tool.pylint]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring"
]
max-line-length = 88
good-names = ["i", "j", "k", "df", "x", "y"]
ignore = ["tests", "build", "dist"]
extension-pkg-whitelist = ["numpy", "pandas"]
output-format = "colorized"
reports = false

[tool.ruff]
target-version = "py311"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.black]
# Use the same line length as Ruff.
line-length = 88
target-version = ["py311"]
skip-string-normalization = true

[tool.isort]
multi_line_output = 3
length_sort = true
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
combine_as_imports = true
force_single_line = false
known_third_party = ["numpy", "pandas", "scikit-learn", "matplotlib", "seaborn", "scipy"]
known_first_party = ["epl_predictions"]
default_section = "THIRDPARTY"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip = ["tests", "build", "dist", "node_modules", "site-packages", "venv"]
add_imports = []


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "pep008"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
